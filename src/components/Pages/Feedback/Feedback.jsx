import React, {useEffect, useState} from 'react';
import "../../../styles/index.scss";
import Header from "../../Header/Header";
import {Rate, notification, Input, Button, Watermark} from 'antd';

const {TextArea} = Input;


const Feedback = () => {

  const [rating, setRating] = useState(0);
  const [description, setDescription] = useState('');
  const [descriptionTitle, setDescriptionTitle] = useState('');


  const changeRate = (value) => {
    setRating(value)
  }

  const changeDescription = (e) => {
    setDescription(e.target.value)
  }

  const [api, contextHolder] = notification.useNotification();
  const openNotificationWithIcon = (type) => {
    if (type === 'success') {
      api[type]({
        message: '–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤!',
      });
    }
    if (type === 'error') {
      api[type]({
        message: '–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞',
        description: '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ'
      });
    }
  };

  useEffect(() => {
    if (rating > 0 && rating <= 2) {
      setDescriptionTitle('–ß—Ç–æ –í–∞–º –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å? üòî')
    }
    if (rating > 2 && rating <= 4) {
      setDescriptionTitle('–ß—Ç–æ –Ω–∞–º –Ω—É–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å? ‚úçÔ∏è')
    }
    if (rating > 4) {
      setDescriptionTitle('–°–ø–∞—Å–∏–±–æ –∑–∞ –≤—ã—Å–æ–∫—É—é –æ—Ü–µ–Ω–∫—É! –ö–∞–∫–∏–µ –µ—Å—Ç—å –ø–æ–∂–µ–ª–∞–Ω–∏—è? üôÇ')
    }

  }, [rating]);

  const sendFeedback = () => {
    setRating(0);
    setDescription('');
    setDescriptionTitle('');

    openNotificationWithIcon('success')
  }

  return (
    <>
      {contextHolder}
      <Header title={'–û—Ç–∑—ã–≤—ã'}/>
      <div className="container">
        <div className="page-feedback">
          <div className="page-feedback__bg">
            <Watermark content="vagcheb" />
          </div>
          <div className="page-feedback__rate">
            <div className="page-feedback__rate-text">
              <h2>–û—Ü–µ–Ω–∏—Ç–µ –Ω–∞—à—É —Ä–∞–±–æ—Ç—É</h2>
              <span>–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –º–Ω–µ–Ω–∏–µ–º</span>
            </div>
            <Rate value={rating} onChange={changeRate} allowClear={false}/>
          </div>
          {rating > 0 ? (
            <div className={`page-feedback__description ${rating > 0 ? 'show' : ''}`}>
              <h3 className="page-feedback__description-title">{descriptionTitle}</h3>
              <TextArea showCount maxLength={200} onChange={changeDescription} autoSize={true}/>
            </div>
          ) : null}
          {rating > 0 && description.length > 7 ? (
            <Button onClick={sendFeedback} className={`page-feedback__button ${rating > 0 ? 'show' : ''}`}>–û—Ç–ø—Ä–∞–≤–∏—Ç—å
              –æ—Ç–∑—ã–≤</Button>
          ) : null}
        </div>
      </div>

    </>
  );
};

export default Feedback;